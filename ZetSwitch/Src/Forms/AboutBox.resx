<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAAAAAAIACoEAAANgAAABAQAAAAABgAaAMAAN4QAAAwMAAAAAAYAKgcAABGFAAAKAAAACAA
        AABAAAAAAQAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFofxYSOFQbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwRGAlODI7UTIvMp00OEJ+VWZVDwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9RU1gNS0x10w+ONw6Nz+cLjZBQgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjJHS21GIuagYxj/f0IQ/0Iq
        JP80NT60SEhILgAAAAAAAAAAAAAAAAAAAADa2toHNTdCjjckIP6UURD/0pIU/4lTHf9BMjjhNz1MVz8/
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEs8UiKPYC2ipHIb/MugD//bpA7/rWYM/3cvCv8vCwr/FxEX/y8x
        NJyZmZkFNzAykyUhJeo6IB7/VyYb/2AwGPhqOBvTUzMqjzs2Sy8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlGT49OycrjUEpIMYsGxrgJxkY4hcY
        Hs8qKi6QY2NjFwAAAAAAAAAAXFxcIT1BRjozMz9AKS5IMQBFuQsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdY
        bhdHW2UZ////BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////
        /////////9/4//8H4H/+A8A//AHAH/wBgB/8AIAf+AAAD/gAAA/4AAAP+AAAD/gAAB/4AAAP8AAAB+AA
        AAfgAAAD4AHAA+ADwAPAB+ADwAfwAcAP+AGAH/wAgH/+AID//4H//////////////////////////ygA
        AAAQAAAAIAAAAAEAGAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0NDQ0NDQ0NDQ0NDQ0NDQ0
        NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQAAAAAAAA0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0
        NDQ0NDQ0NDQ0NDQ0NDQAAAA0NDQ0NDSGhYV0bGReWVhQUFA0NDQ0NDR4eHlgWFBlXVJQUFA0NDQ0NDQ0
        NDQAAAA0NDQ0NDSIbUbKegi5bQpEQUFLS0teXl5QQjbgoAzkrAtjVzpOTk40NDQ0NDQAAAA0NDSNiITm
        uA7enQjyqwhqSxdPT1BQT1CheBT52wb00gi0eA5VVVU0NDQ0NDQAAAA0NDSgjWroqQvwsAntqgmgcRIx
        KzQ0LzLctA735wfzyQnfoQpcVVE0NDQ0NDQ0NDQ0NDStk0nvtAjmnQjBgAuaYA0uJSZZSCbevBLz1Qv4
        zAfsqQlgUkU0NDQ0NDQ0NDQ0NDSLg3DWnBfLhgmXXQeFTghONCR1TR/cqw7vww3vyQ69kytRT040NDQ0
        NDQ0NDSTjoWqiiXeqwzRgg6gVwduOQUvHRJdOhbdnw7vxA7guw3jswzPkRpWVFM0NDQ0NDSmk2D4zQf4
        ygfwqwy5ZApsMQhVUlBsYFnakg7txw722wj64Qb52QdmX0w0NDQ0NDSqk0L63AX4zQfKfg2KRAZeSDl5
        eXmJiYmngTDxzgztyQ/55Ab74AZvYkA0NDSNjYzQnRb41AbkrwzRiAlyTCd7eno0NDQ0NDSTj423nB7q
        yQznvQ722ge+khRRUVFvaWfEgw3zqQjYgQyIXjOCf340NDQ0NDQ0NDQ0NDSSj46qhznotg3hog2XXQxX
        VVeKiIhoWVV9YlKIe3OMi4o0NDQ0NDQ0NDQAAAAAAAA0NDSVlZWJhIF1amNpZWWDg4M0NDQ0NDQ0NDQ0
        NDQ0NDQ0NDQ0NDQAAAAAAAAAAAAAAAA0NDQ0NDQ0NDQ0NDQ0NDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAPDDAADgAwAA4AEAAMABAADAAQAAwAEAAMAA
        AACAAAAAgYAAAIPAAAAH4AAAj/kAAP//AAD//wAAKAAAADAAAABgAAAAAQAYAAAAAAAAGwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFTUT4iF1czEmw6EEYgDEYhDzIVCBUODhIM
        ERkWHHFxcQAAAAAAAAAAAGZiYzMvMCkgIUIkHjkgGzggHUk2MWxgXAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAGZjZElGR0A7OkNAQFFRUm1tbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////wAA////////AAD///////8AAP///////wAA////////
        AAD///////8AAP//f/4P/wAA//gf/Af/AAD/4A/4Af8AAP/AA/AA/wAA/4AD4AD/AAD/gAHAAP8AAP+A
        AcAAfwAA/wAAgAB/AAD/AAAAAD8AAP8AAAAAPwAA/gAAAAA/AAD+AAAAAD8AAP4AAAAAPwAA/gAAAAA/
        AAD+AAAAAH8AAP4AAAAAfwAA/wAAAAB/AAD/AAAAAB8AAPwAAAAADwAA+AAAAAAPAAD4AAAAAA8AAPAA
        AAAABwAA8AAAgAAHAADwAAPAAAcAAPAAA+AABwAA8AAH4AADAADgAA/wAAMAAOAAH/gAAQAA4AA//AAB
        AADAAD/8AAAAAMAAf/8AAAAAgAH//4AAAACAA///wAEAAIAH///wAQAAwD////4HAAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAA==
</value>
  </data>
</root>